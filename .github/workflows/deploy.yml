name: Deploy to cPanel
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
          
      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          
      # Install PHP Dependencies
      - name: Install Composer Dependencies
        run: composer install --no-dev --optimize-autoloader
        
      # Install Node Dependencies and Build Assets
      - name: Install NPM Dependencies
        run: npm ci
        
      - name: Build Frontend Assets
        run: npm run build
        
      # Generate Application Key if needed
      - name: Generate Application Key
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
            php artisan key:generate
          fi
            
      # Create deployment artifact
      - name: Create deployment artifact
        run: |
          # Create the deployment directory
          mkdir deployment
          
          # Copy project files
          cp -r app bootstrap config database lang public resources routes storage vendor composer.json composer.lock artisan deployment/
          
          # Copy built assets to public directory
          cp -r public/build/* deployment/public/build/
          
          # Create storage symlink
          cd deployment && php artisan storage:link
          
          # Set permissions
          chmod -R 755 deployment
          chmod -R 777 deployment/storage deployment/bootstrap/cache
          
      # Deploy to cPanel
      - name: Deploy to cPanel
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./deployment/
          server-dir: personal_portfolio/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            
      # Deploy build folder to public_html
      - name: Deploy build folder to public_html
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./deployment/public/build/
          server-dir: public_html/build/
          
      # Run database migrations
      - name: Run database migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd personal_portfolio
            php artisan migrate --force
            php artisan optimize:clear
            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear
            php artisan route:clear
            composer dump-autoload
            
      # Clear all caches after deployment
      - name: Clear caches
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd personal_portfolio
            php artisan optimize:clear